// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             String                   @id @default(uuid())
  slug           String                   @unique
  title          String
  mainImage      String
  price          Int                      @default(0)
  oldPrice       Int?                     @default(0)
  rating         Int                      @default(0)
  ratingCount    Int                      @default(0)
  description    String
  manufacturer   String
  inStock        Int                      @default(1)
  categoryId     String
  category       Category                 @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  customerOrders customer_order_product[]
  Wishlist       Wishlist[]
}

model Image {
  imageID   String @id @default(uuid())
  productID String
  image     String
}

model User {
  id              String           @id @default(uuid())
  name            String?          // الاسم الكامل
  email           String           @unique
  password        String?
  phone           String?          // رقم الهاتف (اختياري)
  address         String?          // العنوان (اختياري)
  role            String?          @default("user")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  Wishlist        Wishlist[]
  orders          Customer_order[]
}

model HeroSection {
  id              String   @id @default(uuid())
  badge           String   @default("FEATURED PRODUCT")
  title           String
  description     String
  imageUrl        String
  button1Text     String   @default("BUY NOW")
  button1Link     String
  button2Text     String   @default("LEARN MORE")
  button2Link     String
  stat1Value      String   @default("50K+")
  stat1Label      String   @default("Happy Customers")
  stat2Value      String   @default("4.9")
  stat2Label      String   @default("Rating")
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Customer_order {
  id            String                   @id @default(uuid())
  userId        String?                  // ربط الطلب بالمستخدم (اختياري)
  user          User?                    @relation(fields: [userId], references: [id])
  name          String
  lastname      String?
  phone         String
  email         String
  company       String?
  adress        String
  apartment     String?
  postalCode    String?
  dateTime      DateTime?                @default(now())
  status        String
  city          String
  country       String?
  orderNotice   String?
  total         Int
  paymentMethod String                   @default("cash_on_delivery")
  products      customer_order_product[]
}

model customer_order_product {
  id              String         @id @default(uuid())
  customerOrder   Customer_order @relation(fields: [customerOrderId], references: [id])
  customerOrderId String
  product         Product        @relation(fields: [productId], references: [id])
  productId       String
  quantity        Int
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[] // Define a one-to-many relationship
}

model Wishlist {
  id        String  @id @default(uuid())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
}
