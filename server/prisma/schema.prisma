generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             String                   @id @default(uuid())
  slug           String                   @unique
  title          String
  mainImage      String
  price          Int                      @default(0)
  rating         Int                      @default(0)
  description    String
  manufacturer   String
  inStock        Int                      @default(1)
  categoryId     String
  colors         String?
  oldPrice       Int?
  sizes          String?
  shippingCost   Int?
  stock          Int?
  ratingCount    Int?
  category       Category                 @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Wishlist       Wishlist[]
  customerOrders customer_order_product[]
}

model Image {
  imageID   String @id @default(uuid())
  productID String
  image     String
}

// ✅ Updated User Model with phone, address, and name
model User {
  id        String           @id @default(uuid())
  name      String?    // ✅ Added: Full name
  email     String     @unique
  password  String?
  phone     String?    // ✅ Added: Phone number
  address   String?    // ✅ Added: Full address
  role      String?    @default("user")
  createdAt DateTime   @default(now())  // ✅ Added: Track creation
  updatedAt DateTime   @updatedAt       // ✅ Added: Track updates
  Wishlist  Wishlist[]
  orders    Customer_order[]
}

model Customer_order {
  id            String                   @id @default(uuid())
  userId        String?                  // ربط الطلب بالمستخدم (اختياري)
  user          User?                    @relation(fields: [userId], references: [id])
  name          String
  lastname      String?
  phone         String
  email         String
  company       String?
  adress        String
  apartment     String?
  postalCode    String?
  dateTime      DateTime?                @default(now())
  status        String
  city          String
  country       String?
  orderNotice   String?
  total         Int
  paymentMethod String                   @default("cash_on_delivery")
  products      customer_order_product[]
}

model customer_order_product {
  id              String         @id @default(uuid())
  customerOrderId String
  productId       String
  quantity        Int
  selectedColor   String?
  selectedSize    String?
  customerOrder   Customer_order @relation(fields: [customerOrderId], references: [id])
  product         Product        @relation(fields: [productId], references: [id])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Wishlist {
  id        String  @id @default(uuid())
  productId String
  userId    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model HeroSection {
  id              String   @id @default(uuid())
  
  // النصوص
  badge           String   @default("FEATURED PRODUCT")
  title           String
  description     String
  
  // الصورة
  imageUrl        String
  
  // الأزرار
  button1Text     String   @default("BUY NOW")
  button1Link     String
  button2Text     String   @default("LEARN MORE")
  button2Link     String
  
  // الإحصائيات
  stat1Value      String   @default("50K+")
  stat1Label      String   @default("Happy Customers")
  stat2Value      String   @default("4.9")
  stat2Label      String   @default("Rating")
  
  // الإعدادات
  isActive        Boolean  @default(true)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}